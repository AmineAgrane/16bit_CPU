Library IEEE;
use ieee.std_logic_1164.all;

entity reg_NbitsP_test is
	generic (
		n : integer := 10
	);
end entity;

architecture archi_reg_NbitsP_test of reg_NbitsP_test is
	component reg_NbitsP is
		generic (
			n : integer := 10
		);
		port ( 
			rst, clk, set : in std_logic;
			d : in std_logic_vector(n-1 downto 0);
			q : out std_logic_vector(n-1 downto 0)
		);
	end component;
	
	signal d_s, q_s : STD_LOGIC_vector(n-1 downto 0);
	signal rst_s, clk_s, set_s : std_logic;
	
	begin
		reg_NbitsP_1 : reg_NbitsP
			generic map (
				n => 10
			)
			port map (
				rst => rst_s,
				clk => clk_s,
				set => set_s,
				d => d_s,
				q => q_s
			);
			
		process
			begin
				rst_s <= '1';
				clk_s <= '0';
				wait for 20 ns;
				set_s <= '0';
				
				d_s <= "0000000000";
				clk_s <= '1';
				wait for 20 ns;
				
				d_s <= "0000000010";
				clk_s <= '0';
				wait for 20 ns;
				clk_s <= '1';
				wait for 20 ns;
				
				d_s <= "0000000011";
				set_s <= '1';
				clk_s <= '0';
				wait for 20 ns;
				clk_s <= '1';
				wait for 20 ns;
				
				d_s <= "0000000100";
				set_s <= '1';
				clk_s <= '0';
				wait for 20 ns;
				clk_s <= '1';
				wait for 20 ns;
				
				wait;
		end process;
	
			
end architecture;